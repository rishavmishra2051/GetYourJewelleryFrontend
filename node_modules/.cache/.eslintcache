[{"D:\\E-Commerce\\src\\index.js":"1","D:\\E-Commerce\\src\\reportWebVitals.js":"2","D:\\E-Commerce\\src\\App.js":"3","D:\\E-Commerce\\src\\screens\\Home.js":"4","D:\\E-Commerce\\src\\screens\\MyOrder.js":"5","D:\\E-Commerce\\src\\screens\\Signup.js":"6","D:\\E-Commerce\\src\\screens\\CategoryExplore.js":"7","D:\\E-Commerce\\src\\screens\\Admin.js":"8","D:\\E-Commerce\\src\\screens\\Category.js":"9","D:\\E-Commerce\\src\\screens\\Categories.js":"10","D:\\E-Commerce\\src\\screens\\CategoryExploreClient.js":"11","D:\\E-Commerce\\src\\screens\\Login.js":"12","D:\\E-Commerce\\src\\screens\\Items.js":"13","D:\\E-Commerce\\src\\screens\\Cart.js":"14","D:\\E-Commerce\\src\\screens\\ViewOrders.js":"15","D:\\E-Commerce\\src\\screens\\ViewUsers.js":"16","D:\\E-Commerce\\src\\screens\\FetchOrder.js":"17","D:\\E-Commerce\\src\\components\\ContextReducer.js":"18","D:\\E-Commerce\\src\\Modal.js":"19","D:\\E-Commerce\\src\\components\\Footer.js":"20","D:\\E-Commerce\\src\\components\\AdminNavbar.js":"21","D:\\E-Commerce\\src\\components\\Navbar.js":"22","D:\\E-Commerce\\src\\components\\Card.js":"23","D:\\E-Commerce\\src\\components\\AdminCard.js":"24","D:\\E-Commerce\\src\\screens\\ProductDetails.js":"25","D:\\E-Commerce\\src\\screens\\ProductDetailsAdmin.js":"26","D:\\E-Commerce\\src\\screens\\AddItem.js":"27","D:\\E-Commerce\\src\\screens\\AddCategory.js":"28","D:\\E-Commerce\\src\\screens\\UpdateCategory.js":"29"},{"size":337,"mtime":1703948155083,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1697610197780,"results":"32","hashOfConfig":"31"},{"size":2874,"mtime":1703059930232,"results":"33","hashOfConfig":"31"},{"size":4680,"mtime":1703948000624,"results":"34","hashOfConfig":"31"},{"size":4485,"mtime":1703147071028,"results":"35","hashOfConfig":"31"},{"size":4672,"mtime":1703147660331,"results":"36","hashOfConfig":"31"},{"size":3231,"mtime":1703147052914,"results":"37","hashOfConfig":"31"},{"size":2763,"mtime":1703062766484,"results":"38","hashOfConfig":"31"},{"size":2343,"mtime":1703147307949,"results":"39","hashOfConfig":"31"},{"size":2404,"mtime":1703147319823,"results":"40","hashOfConfig":"31"},{"size":404,"mtime":1698224455539,"results":"41","hashOfConfig":"31"},{"size":3382,"mtime":1703147068432,"results":"42","hashOfConfig":"31"},{"size":4721,"mtime":1703147739814,"results":"43","hashOfConfig":"31"},{"size":5063,"mtime":1703147044532,"results":"44","hashOfConfig":"31"},{"size":8738,"mtime":1703147085710,"results":"45","hashOfConfig":"31"},{"size":3407,"mtime":1703147094150,"results":"46","hashOfConfig":"31"},{"size":4208,"mtime":1703147058086,"results":"47","hashOfConfig":"31"},{"size":1764,"mtime":1702457464874,"results":"48","hashOfConfig":"31"},{"size":824,"mtime":1697610197719,"results":"49","hashOfConfig":"31"},{"size":607,"mtime":1702109855298,"results":"50","hashOfConfig":"31"},{"size":3232,"mtime":1703063142710,"results":"51","hashOfConfig":"31"},{"size":4865,"mtime":1703063302574,"results":"52","hashOfConfig":"31"},{"size":3051,"mtime":1702967627298,"results":"53","hashOfConfig":"31"},{"size":1979,"mtime":1702967671758,"results":"54","hashOfConfig":"31"},{"size":5949,"mtime":1703147073240,"results":"55","hashOfConfig":"31"},{"size":4167,"mtime":1703147371167,"results":"56","hashOfConfig":"31"},{"size":5252,"mtime":1703147036282,"results":"57","hashOfConfig":"31"},{"size":2127,"mtime":1703147033156,"results":"58","hashOfConfig":"31"},{"size":2447,"mtime":1703147082916,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ltjeog",{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"66"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\E-Commerce\\src\\index.js",[],[],"D:\\E-Commerce\\src\\reportWebVitals.js",[],[],["158"],"D:\\E-Commerce\\src\\App.js",[],[],"D:\\E-Commerce\\src\\screens\\Home.js",[],[],"D:\\E-Commerce\\src\\screens\\MyOrder.js",[],[],"D:\\E-Commerce\\src\\screens\\Signup.js",[],[],"D:\\E-Commerce\\src\\screens\\CategoryExplore.js",["159","160","161"],[],"import React from 'react'\r\nimport { useEffect, useState } from 'react'\r\nimport Card from '../components/Card'\r\nimport Navbar from '../components/Navbar'\r\nimport { Link,useLocation } from \"react-router-dom\"\r\nimport Footer from '../components/Footer'\r\nexport default function CategoryExplore() {\r\n    const [foodCat, setFoodCat] = useState(\"\")\r\n    const [foodItems, setFoodItems] = useState(\"\")\r\n    const [search, setSearch] = useState('')\r\n    // const searchParams = new URLSearchParams(window.location.search);\r\n    // const name = searchParams.get('catdata');\r\n    //const catdata = props.location.state;\r\n    //let foodCategory = props.Category;\r\n    const { state } = useLocation();\r\n    const { category } = state;\r\n\r\n    const loadFoodItems = async () => {\r\n        let response = await fetch(\"https://getyourjewellerybackend.onrender.com/api/auth/foodData\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n\r\n        });\r\n        response = await response.json();\r\n        setFoodItems(response[0])\r\n        setFoodCat(category)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        loadFoodItems()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div>  {/* justify-content-center, copy this <form> from navbar for search box */}\r\n            <nav class=\"navbar navbar-light \">\r\n                    <div class=\"container\">\r\n                        <Link className=\"navbar-brand fs-1 ms-2 text-secondary\" to=\"/\">{foodCat}</Link>\r\n                        <form class=\"d-flex\">\r\n                            <input class=\"form-control me-2 border-secondary\" type=\"search\" placeholder=\"Search Items\" aria-label=\"Search\" value={search} onChange={(e) => { setSearch(e.target.value) }} />\r\n                            <button class=\"btn btn-outline-secondary\" onClick={() => { setSearch('') }}>Search</button>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            <div className='container'> {/* boootstrap is mobile first */}\r\n                \r\n                <div className='row mb-3'>\r\n                    {/*foodItems.length !== []*/}\r\n                    {foodItems.length > 1 ? foodItems.filter(\r\n                        (items) => (items.CategoryName === foodCat) && (items.name.toLowerCase().includes(search.toLowerCase())))\r\n                        .map(filterItems => { \r\n                            return (\r\n                                <div key={filterItems.id} className='col-12 col-md-6 col-lg-3'>\r\n                                    {console.log(filterItems.url)}\r\n                                    <Card foodName={filterItems.name} item={filterItems} price={filterItems.price} ImgSrc={filterItems.img} CategoryName={filterItems.CategoryName} id={filterItems._id} save={filterItems.Save} dealer={filterItems.Dealer} metal={filterItems.Metal} material={filterItems.Material} pricebreakup={filterItems.pricebreakup}></Card>\r\n                        \r\n                                </div>\r\n                            )\r\n                        }) : <div> Wait Data is loading... </div>}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","D:\\E-Commerce\\src\\screens\\Admin.js",["162"],[],"import React, { useState } from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AdminNavbar from '../components/AdminNavbar';\r\nimport Footer from '../components/Footer';\r\n\r\nexport default function Admin() {\r\n    let navigate = useNavigate();\r\n    return (\r\n        <>\r\n            <div className='mb-5'>\r\n                <AdminNavbar />\r\n            </div>\r\n            <div className=\"grid text-center\">\r\n                <div className=\"bg-info bg-opacity-10 border border-info rounded-end text-secondary p-3 container\"><b>Admin Section</b></div>\r\n            </div>\r\n            <div className=\"container overflow-hidden mt-5 mb-5\">\r\n                <div className=\"row gy-5 text-center\">\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/vieworders\") }}>View Orders</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/viewusers\") }}>View Users</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/addcategory\") }}>Add Category</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/viewcategories\") }}>View Categories</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/additem\") }}>Add Item</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/items\") }}>View Items</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/updatecategory\") }}>Update Category</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <button className='btn btn-outline-secondary p-2 col-12 col-md-6 col-lg-3' onClick={() => { navigate(\"/items\") }}>Update Item</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='mt-5'>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","D:\\E-Commerce\\src\\screens\\Category.js",[],[],"D:\\E-Commerce\\src\\screens\\Categories.js",[],[],"D:\\E-Commerce\\src\\screens\\CategoryExploreClient.js",[],[],"D:\\E-Commerce\\src\\screens\\Login.js",[],[],"D:\\E-Commerce\\src\\screens\\Items.js",[],[],"D:\\E-Commerce\\src\\screens\\Cart.js",[],[],"D:\\E-Commerce\\src\\screens\\ViewOrders.js",["163"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Footer from '../components/Footer'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nexport default function ViewOrders() {\r\n    const [orders, setOrders] = useState([])\r\n    const [search, setSearch] = useState('')\r\n\r\n    const [status, setStatus] = React.useState({});\r\n    const handleChange = (event, orderId, itemId) => {\r\n        const newStatus = { ...status };\r\n        newStatus[`${orderId}_${itemId}`] = event.target.value;\r\n        setStatus(newStatus);\r\n        changeStatus(orderId, event.target.value);\r\n    };\r\n    const changeStatus = async (id, state) => {\r\n        const response = await fetch(\"https://getyourjewellerybackend.onrender.com/api/auth/orderstate\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ id: id, state: state })\r\n        });\r\n        const json = await response.json()\r\n        console.log(json);\r\n        if (json.success) {\r\n            alert(state)\r\n\r\n        }\r\n        else {\r\n            alert(\"Status can not be changed\")\r\n        }\r\n    }\r\n\r\n    const loadOrders = async () => {\r\n        let response = await fetch(\"https://getyourjewellerybackend.onrender.com/api/auth/fetchgyjorderData\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(async (res) => {\r\n            let response = await res.json()\r\n            await setOrders(response);\r\n\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadOrders()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div>\r\n                <nav class=\"navbar navbar-light bg-light\">\r\n                    <div class=\"container\">\r\n                        <Link className=\"navbar-brand fs-1 fst-italic\" to=\"/admin\">GetYourJewellery</Link>\r\n                        <form class=\"d-flex\">\r\n                            <input class=\"form-control me-2 border-secondary\" type=\"search\" placeholder=\"Search Order\" aria-label=\"Search\" value={search} onChange={(e) => { setSearch(e.target.value) }} />\r\n                            <button class=\"btn btn-outline-secondary\" onClick={() => { setSearch('') }}>Search</button>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n            <div className='mt-3'>\r\n                <div className='m-auto mt-2 table-responsive  table-responsive-sm table-responsive-md' >\r\n                    <table className='table table-hover '>\r\n                        <thead className=' text-secondary fs-4'>\r\n                            <tr className='bg-white'>\r\n                                <th scope='col' >Date</th>\r\n                                <th scope='col' >Customer Email</th>\r\n                                <th scope='col' >Product Id</th>\r\n                                <th scope='col' >Product Name</th>\r\n                                <th scope='col' >Qty</th>\r\n                                <th scope='col' >Amount</th>\r\n                                <th scope='col' >Status</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {orders.length >= 1 ? orders.filter(\r\n                                (data) => (data.email.toLowerCase().includes(search.toLowerCase()))).reverse()\r\n                                .map((order) => {\r\n\r\n                                    return (\r\n                                        <>\r\n                                            {order.order_data.length >= 1 ? order.order_data\r\n                                                .map(item => {\r\n                                                    return (\r\n                                                        <>\r\n                                                            {Array.from(Array(item.length - 1), (e, i) => {\r\n                                                                return (\r\n                                                                    <tr key={i + 1} value={i + 1}>\r\n                                                                        <td>{Object.values(item[0])}</td>\r\n                                                                        <td>{order.email}</td>\r\n                                                                        <td >{Object.values(item[i + 1].id)}</td>\r\n                                                                        <td>{Object.values(item[i + 1].name)}</td>\r\n                                                                        <td>{Object.values(item[i + 1])[2]}</td>\r\n                                                                        <td>{Object.values(item[i + 1])[3] * Object.values(item[i + 1])[2]}</td>\r\n                                                                        <td>{order.order_state}</td>\r\n                                                                        <td>\r\n                                                                            <FormControl sx={{ minWidth: 5 }}>\r\n                                                                                <InputLabel id=\"demo-simple-select-helper-label\"></InputLabel>\r\n                                                                                <Select\r\n                                                                                    \r\n                                                                                    labelId={`status-label-${order._id}_${i}`}\r\n                                                                                    id={`status-select-${order._id}_${i}`}\r\n                                                                                    value={status[`${order._id}_${i}`] || ''}\r\n                                                                                    label=\"Status\"\r\n                                                                                    onChange={(event) => handleChange(event, order._id, i)}\r\n                                                                                >\r\n                                                                                    <MenuItem value={\"Dispatched\"}>Dispatched</MenuItem>\r\n                                                                                    <MenuItem value={\"ReadyToShip\"}>Ready To Ship</MenuItem>\r\n                                                                                    <MenuItem value={\"Shipped\"}>Shipped</MenuItem>\r\n                                                                                    <MenuItem value={\"OutForDelivery\"}>Out For Delivery</MenuItem>\r\n                                                                                    <MenuItem value={\"Delivered\"}>Delivered</MenuItem>\r\n                                                                                    <MenuItem value={\"ReturnAccepted\"}>Return Accepted</MenuItem>\r\n                                                                                    <MenuItem value={\"PickedUp\"}>Picked UP</MenuItem>\r\n                                                                                    <MenuItem value={\"Replaced\"}>Replaced</MenuItem>\r\n\r\n                                                                                </Select>\r\n                                                                            </FormControl>\r\n\r\n                                                                        </td>\r\n\r\n                                                                    </tr>\r\n                                                                )\r\n                                                            })}\r\n\r\n                                                        </>\r\n                                                    )\r\n                                                }) : \"\"}\r\n                                        </>\r\n                                    )\r\n                                })\r\n                                : \"No Order Found\"}\r\n                        </tbody>\r\n                    </table>\r\n\r\n\r\n                </div>\r\n            </div >\r\n            <div className='mt-5'>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n/*\r\n<th scope='col' >Img</th>\r\n<th scope='col' >Category</th>\r\n<th scope='col' >Dealer</th>\r\n<td>{<img src={item[i + 1].img} height=\"35\" width=\"35\" alt=\"\" />}</td>\r\n<td>{Object.values(item[i + 1])[5]}</td>\r\n<td>{Object.values(item[i + 1].dealer)}</td>\r\n*/","D:\\E-Commerce\\src\\screens\\ViewUsers.js",["164"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport Footer from '../components/Footer'\r\nexport default function ViewUsers() {\r\n    const [users, setUsers] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const navigate = useNavigate()\r\n    const loadUsers = async () => {\r\n        let response = await fetch(\"https://getyourjewellerybackend.onrender.com/api/auth/userData\", {\r\n            // credentials: 'include',\r\n            // Origin:\"http://localhost:3000/login\",\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n\r\n        });\r\n        response = await response.json();\r\n        setUsers(response);\r\n    }\r\n    useEffect(() => {\r\n        loadUsers()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div>\r\n                <nav class=\"navbar navbar-light bg-light\">\r\n                    <div class=\"container\">\r\n                        <Link className=\"navbar-brand fs-1 fst-italic\" to=\"/admin\">GetYourJewellery</Link>\r\n                        <form class=\"d-flex\">\r\n                            <input class=\"form-control me-2 border-secondary\" type=\"search\" placeholder=\"Search User\" aria-label=\"Search\" value={search} onChange={(e) => { setSearch(e.target.value) }} />\r\n                            <button class=\"btn btn-outline-secondary\" onClick={() => { setSearch('') }}>Search</button>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            <div className='container-fluid m-auto mt-2 table-responsive  table-responsive-sm table-responsive-md' >\r\n                <table className='table table-hover '>\r\n                    <thead className=' text-secondary fs-4'>\r\n                        <tr className='bg-white'>\r\n                            <th scope='col' >ID</th>\r\n                            <th scope='col' >Name</th>\r\n                            <th scope='col' >Email</th>\r\n                            <th scope='col' >Date</th>\r\n                            <th scope='col' >Location</th>\r\n                            <th scope='col' >Password</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.length > 1 ? users.filter(\r\n                            (data) => (data.email.toLowerCase().includes(search.toLowerCase())))\r\n                            .map((user) => {\r\n\r\n                                return (\r\n                                    <tr>\r\n                                        <Link className='text-secondary' to=\"/fetchorders\" state={{ userEmail: user.email }}><th scope='row' >{user._id}</th></Link>\r\n                                        <td >{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.date}</td>\r\n                                        <td >{user.location}</td>\r\n                                        <td>{user.password}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                            : \"No User Found\"}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='mt-5'>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n//table-hover","D:\\E-Commerce\\src\\screens\\FetchOrder.js",["165"],[],"import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nexport default function FetchOrder() {\r\n    const [orderData, setorderData] = useState({})\r\n    const location = useLocation()\r\n    const { userEmail } = location.state\r\n    const fetchOrder = async () => {\r\n        //console.log(userEmail)\r\n        await fetch(\"https://getyourjewellerybackend.onrender.com/api/auth/mygyjOrderData\", {\r\n            // credentials: 'include',\r\n            // Origin:\"http://localhost:3000/login\",\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: userEmail\r\n            })\r\n        }).then(async (res) => {\r\n            let response = await res.json()\r\n            await setorderData(response)\r\n        })\r\n\r\n        // await res.map((data)=>{\r\n        //    console.log(data)\r\n        // })\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchOrder()\r\n    }, [])\r\n    return (\r\n        <>\r\n            \r\n            <div className='container'>\r\n            <div>\r\n                <nav class=\"navbar navbar-light bg-light\">\r\n                    <div class=\"container\">\r\n                    <h2 className='text-secondary'>Orders of {userEmail}</h2>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n                <div className='row'>\r\n\r\n                    {orderData !== {} ? Array(orderData).map(data => {\r\n                        return (\r\n                            data.orderData ?\r\n                                data.orderData.order_data.slice(0).reverse().map((item) => {\r\n                                    return (\r\n                                        item.map((arrayData) => {\r\n                                            return (\r\n                                                <div  >\r\n                                                    {arrayData.Order_date ? <div className='m-auto mt-5'>\r\n\r\n                                                        {data = arrayData.Order_date}\r\n                                                        <hr />\r\n                                                    </div> :\r\n                                                        <div className='col-12 col-md-6 col-lg-3' >\r\n                                                            <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n                                                                <img src={arrayData.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n                                                                <div className=\"card-body\">\r\n                                                                    <h5 className=\"card-title\">{arrayData.name}</h5>\r\n                                                                    <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n                                                                        <span className='m-1'>{arrayData.qty}</span>\r\n                                                                        <span className='m-1'>{data}</span>\r\n                                                                        <div className=' d-inline ms-2 h-100 w-20 fs-5' >\r\n                                                                            ₹{arrayData.price}/-\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    )\r\n                                }) : \"\"\r\n                        )\r\n                    }) : \"You have no order\"}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","D:\\E-Commerce\\src\\components\\ContextReducer.js",[],[],"D:\\E-Commerce\\src\\Modal.js",[],[],"D:\\E-Commerce\\src\\components\\Footer.js",[],[],"D:\\E-Commerce\\src\\components\\AdminNavbar.js",["166"],[],"import React, { useState } from 'react'\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nconst NavItem = styled.li`\r\n  list-style: none;\r\n  margin: 0 1rem;\r\n\r\n  a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n      color: #b9bab5;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MobileNav = styled.ul`\r\n  display: none;\r\n  flex-direction: column;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  @media (max-width: 767px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport default function AdminNavbar() {\r\n    let navigate = useNavigate();\r\n    const [isMobileNavOpen, setIsMobileNavOpen] = React.useState(false);\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token')\r\n        navigate(\"/login\")\r\n    }\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary position-sticky\"\r\n                style={{ boxShadow: \"0px 10px 20px black\", filter: 'blur(20)', position: \"fixed\", zIndex: \"10\", width: \"100%\" }}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand fs-1 fst-italic\" to=\"/admin\">GetYourJewellery</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" onClick={() => setIsMobileNavOpen(!isMobileNavOpen)} data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link fs-5 mx-3 active\" aria-current=\"page\" to=\"/admin\">Admin</Link>  {/* index.css - nav-link color white */}\r\n                            </li>\r\n                        </ul>\r\n                        {(!localStorage.getItem(\"token\")) ?\r\n                            <form className=\"d-flex\">\r\n                                <Link className=\"btn bg-white text-secondary mx-1 \" to=\"/login\">Login</Link>\r\n                                <Link className=\"btn bg-white text-secondary mx-1\" to=\"/signup\">Signup</Link>\r\n                            </form> :\r\n                            <div>\r\n                                <button onClick={handleLogout} className=\"btn bg-white text-secondary\" >Logout</button></div>}\r\n                    </div>\r\n                    <MobileNav style={{ display: isMobileNavOpen ? 'flex' : 'none' }}>\r\n                        \r\n                        {(!localStorage.getItem(\"token\")) ?\r\n                            <>\r\n                                <NavItem><Link to=\"/login\">Login</Link></NavItem>\r\n                                <NavItem><Link to=\"/signup\">Signup</Link></NavItem>\r\n                            </> :\r\n                                <NavItem><Link onClick={handleLogout}>Logout</Link></NavItem>\r\n                            }\r\n                    </MobileNav>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","D:\\E-Commerce\\src\\components\\Navbar.js",["167"],[],"/* eslint-disable react/jsx-no-undef */\r\nimport React, { useState } from 'react'\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport { useCart } from './ContextReducer';\r\nimport Modal from '../Modal';\r\nimport Cart from '../screens/Cart';\r\nimport styled from 'styled-components';\r\n\r\nconst NavItem = styled.li`\r\n  list-style: none;\r\n  margin: 0 1rem;\r\n\r\n  a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n      color: #b9bab5;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MobileNav = styled.ul`\r\n  display: none;\r\n  flex-direction: column;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  @media (max-width: 767px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport default function Navbar(props) {\r\n\r\n  const [isMobileNavOpen, setIsMobileNavOpen] = React.useState(false);\r\n  const [cartView, setCartView] = useState(false)\r\n  localStorage.setItem('temp', \"first\")\r\n  let navigate = useNavigate();\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token')\r\n\r\n    navigate(\"/login\")\r\n  }\r\n\r\n  const loadCart = () => {\r\n    setCartView(true)\r\n  }\r\n\r\n  const items = useCart();\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-secondary position-sticky\"\r\n        style={{ boxShadow: \"0px 10px 20px black\", filter: 'blur(20)', position: \"fixed\", zIndex: \"10\", width: \"100%\" }}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand fs-1 fst-italic\" to=\"/\">GetYourJewellery</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" onClick={() => setIsMobileNavOpen(!isMobileNavOpen)} data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link fs-5 mx-3 active\" aria-current=\"page\" to=\"/\">Home</Link>  {/* index.css - nav-link color white */}\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link fs-5 mx-3 active\" aria-current=\"page\" to=\"/category\">Categories</Link>  {/* index.css - nav-link color white */}\r\n              </li>\r\n\r\n              {(localStorage.getItem(\"token\")) ?\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link fs-5 mx-3 active\" aria-current=\"page\" to=\"/myorder\" >My Orders</Link>  {/* index.css - nav-link color white */}\r\n                </li> : \"\"}\r\n            </ul>\r\n            {(!localStorage.getItem(\"token\")) ?\r\n              <form className=\"d-flex\">\r\n                <Link className=\"btn bg-white text-secondary mx-1 \" to=\"/login\">Login</Link>\r\n                <Link className=\"btn bg-white text-secondary mx-1\" to=\"/signup\">Signup</Link>\r\n              </form> :\r\n              <div>\r\n\r\n                <div className=\"btn bg-white text-secondary mx-2 \" onClick={() => navigate(\"/cart\")}>\r\n                  <Badge color=\"secondary\" badgeContent={items.length} >\r\n                    <ShoppingCartIcon />\r\n                  </Badge>\r\n                  Cart\r\n                </div>\r\n\r\n                {cartView ? <Modal onClose={() => setCartView(false)}><Cart></Cart></Modal> : \"\"}\r\n\r\n                <button onClick={handleLogout} className=\"btn bg-white text-secondary\" >Logout</button></div>}\r\n          </div>\r\n\r\n          <MobileNav style={{ display: isMobileNavOpen ? 'flex' : 'none' }}>\r\n            <NavItem><Link to=\"/\">Home</Link></NavItem>\r\n            \r\n            <NavItem><Link to=\"/category\">Categories</Link></NavItem>\r\n            {(localStorage.getItem(\"token\")) ?\r\n              <NavItem>\r\n                <Link to=\"/myorder\" >My Orders</Link>  {/* index.css - nav-link color white */}\r\n              </NavItem> : \"\"}\r\n              {(!localStorage.getItem(\"token\")) ?\r\n              <>\r\n                <NavItem><Link to=\"/login\">Login</Link></NavItem>\r\n                <NavItem><Link to=\"/signup\">Signup</Link></NavItem>\r\n              </> :\r\n              <>\r\n\r\n                <NavItem className='text-white' onClick={() => navigate(\"/cart\")}>\r\n                  <Badge badgeContent={items.length} >\r\n                    <ShoppingCartIcon />\r\n                  </Badge>\r\n                  Cart\r\n                </NavItem>\r\n\r\n                {cartView ? <Modal onClose={() => setCartView(false)}><Cart></Cart></Modal> : \"\"}\r\n\r\n                <NavItem><Link onClick={handleLogout}>Logout</Link></NavItem>\r\n                </>}\r\n          </MobileNav>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","D:\\E-Commerce\\src\\components\\Card.js",["168","169"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatchCart, useCart } from './ContextReducer'\r\n// import { Dropdown, DropdownButton } from 'react-bootstrap';\r\n\r\nexport default function Card(props) {\r\n  let data = useCart();\r\n\r\n  let navigate = useNavigate()\r\n  const [qty, setQty] = useState(1)\r\n  const priceRef = useRef();\r\n\r\n  let foodItem = props.item;\r\n  const dispatch = useDispatchCart();\r\n\r\n  const handleQty = (e) => {\r\n    setQty(e.target.value);\r\n  }\r\n\r\n  const handleAddToCart = async () => {\r\n    if (!localStorage.getItem(\"token\")) {\r\n      navigate(\"/login\")\r\n    }\r\n    let food = []\r\n    for (const item of data) {\r\n      if (item.id === foodItem._id) {\r\n        food = item;\r\n\r\n        break;\r\n      }\r\n    }\r\n    console.log(food)\r\n    console.log(new Date())\r\n    await dispatch({ type: \"ADD\", id: foodItem._id, name: foodItem.name, img: props.ImgSrc, price: finalPrice, qty: qty, category: props.CategoryName, save: props.save, dealer: props.dealer })\r\n  }\r\n\r\n  const saving = parseInt((props.save / 100) * props.price);\r\n  const finalPrice = qty * parseInt(props.price - (saving));  //This is where Price is changing\r\n  const product = {\r\n    id: props.id, name: props.foodName, price: props.price, img: props.ImgSrc, category: props.CategoryName,\r\n    save: props.save, dealer: props.dealer, metal: props.metal, material: props.material, pricebreakup: props.pricebreakup\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"card mt-3\" style={{ width: \"17rem\", maxHeight: \"400px\" }}>\r\n        <img src={props.ImgSrc} className=\"card-img-top\" alt=\"...\" style={{ maxHeight: \"180px\", objectFit: \"fill\" }} />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title text-secondary h6\">{props.foodName}</h5>\r\n          <h5 className=' d-inline text-secondary h-100 w-20 fs-6 ms-2 me-1'><b>₹{finalPrice}/-</b></h5>\r\n          <s className='text-secondary me-1'>₹{props.price * qty}/-</s>\r\n          <select className=\"m-2 h-100 w-30 bg-outline-secondary text-secondary rounded\" style={{ select: \"#FF0000\" }} onChange={handleQty}>\r\n            {Array.from(Array(5), (e, i) => {\r\n              return (\r\n                <option key={i + 1} value={i + 1}>{i + 1}</option>)\r\n            })}\r\n          </select>\r\n          <br />\r\n          <small className='text-secondary me-1'>You Save: {saving * qty}</small><small className='text-warning me-1'>[{props.save}% OFF]</small>\r\n          <hr></hr>\r\n\r\n          <div className='btn-group'>\r\n          <button className={`btn btn-outline-secondary m-1 rounded`} onClick={handleAddToCart}>Add to Cart</button>\r\n            <button className={`btn btn-outline-secondary m-1 rounded`} onClick={() => navigate(\"/productdetails\", { state: product })}>View Details</button>\r\n\r\n          </div>\r\n\r\n          {/* <button className={`btn btn-danger justify-center ms-2 ${btnEnable ? \"\" : \"disabled\"}`} onClick={handleRemoveCart}>Remove</button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n//","D:\\E-Commerce\\src\\components\\AdminCard.js",["170","171","172","173","174"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nexport default function AdminCard(props) {\r\n    \r\n  let navigate = useNavigate()\r\n  const [qty, setQty] = useState(1)\r\n  const [size, setSize] = useState(\"\")\r\n  const priceRef = useRef();\r\n  // const [btnEnable, setBtnEnable] = useState(false);\r\n  // let totval = 0\r\n  // let price = Object.values(options).map((value) => {\r\n  //   return parseInt(value, 10);\r\n  // });\r\n  \r\n  \r\n  const product = { id: props.id, name: props.foodName, price: props.price, img: props.ImgSrc, category:props.CategoryName,\r\n    save:props.save, dealer:props.dealer, metal:props.metal, material:props.material, pricebreakup:props.pricebreakup };\r\n\r\n  \r\n  \r\n\r\n    const saving = parseInt((props.save / 100) * props.price);\r\n    const finalPrice = qty*parseInt(props.price - (saving));   //This is where Price is changing\r\n  // totval += finalPrice;\r\n  // console.log(totval)\r\n  return (\r\n    <>\r\n    <div className=\"card mt-3\" style={{ width: \"17rem\", maxHeight: \"400px\" }}>\r\n        <img src={props.ImgSrc} className=\"card-img-top\" alt=\"...\" style={{ maxHeight: \"180px\", objectFit: \"fill\" }} />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title text-secondary h6\">{props.foodName}</h5>\r\n          {/* <p className=\"card-text\">This is some random text. This is description.</p> */}\r\n          <div className='container w-100 p-0' style={{ height: \"38px\" }}>            \r\n            <div className=' d-inline text-secondary text-center h-100 w-20 fs-5'>\r\n              MRP: ₹{finalPrice}/-\r\n            </div>\r\n            \r\n            <br />\r\n            <small className='text-secondary text-center'>ID: {props.id}</small>\r\n          </div>\r\n          <hr></hr>\r\n          <button className={`btn btn-outline-secondary m-2 `} onClick={() => navigate(\"/productdetailsadmin\",{ state: product })}>View Details</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","D:\\E-Commerce\\src\\screens\\ProductDetails.js",["175","176","177"],[],"import React, { useState, useRef, useEffect } from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport Card from '../components/Card'\r\nimport { Link, useLocation } from \"react-router-dom\"\r\nimport Footer from '../components/Footer';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatchCart, useCart } from '../components/ContextReducer'\r\nexport default function ProductDetails() {\r\n  const dispatch = useDispatchCart();\r\n  const [foodCat, setFoodCat] = useState([])\r\n  const [foodItems, setFoodItems] = useState([])\r\n  const [qty, setQty] = useState(1)\r\n  let data = useCart();\r\n  const location = useLocation();\r\n  const product = location.state;\r\n  let navigate = useNavigate()\r\n  const handleQty = (e) => {\r\n    setQty(e.target.value);\r\n  }\r\n  const loadFoodItems = async () => {\r\n    let response = await fetch(\"https://getyourjewellerybackend.onrender.com/api/auth/jewelData\", {\r\n      // credentials: 'include',\r\n      // Origin:\"http://localhost:3000/login\",\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    response = await response.json();\r\n    //console.log(response[1][0].CategoryName);\r\n    // console.log(response[1][1].CategoryName)\r\n    setFoodItems(response[0])\r\n    setFoodCat(response[1])\r\n  }\r\n  useEffect(() => {\r\n    loadFoodItems()\r\n  }, [])\r\n\r\n  const handleAddToCart = async () => {\r\n    if (!localStorage.getItem(\"token\")) {\r\n      navigate(\"/login\")\r\n    }\r\n    let food = []\r\n    for (const item of data) {\r\n      if (item.id === product.id) {\r\n        food = item;\r\n\r\n        break;\r\n      }\r\n    }\r\n    console.log(food)\r\n    console.log(new Date())\r\n    //food !== []\r\n    await dispatch({ type: \"ADD\", id: product.id,img:product.img, name: product.name, price: finalPrice, qty: qty, category: product.category, save: product.save, dealer: product.dealer })\r\n  }\r\n\r\n  let content;\r\n  if (Object.keys(product.pricebreakup[0]).length===4) {\r\n    content = <div className='m-2'>\r\n    <p>View Price Breakup</p>\r\n    <p><small className='border border-secondary text-secondary p-1'>Gold: {Object.values(product.pricebreakup[0])[0]}</small> + <small className='border border-secondary text-secondary p-1'>Diamond/Stone: {Object.values(product.pricebreakup[0])[1]}</small> + <small className='border border-secondary text-secondary p-1'>Making Charges: {Object.values(product.pricebreakup[0])[2]}</small> + <small className='border border-secondary text-secondary p-1'>GST (3%): {Object.values(product.pricebreakup[0])[3]}</small></p>\r\n  </div>;\r\n  } else {\r\n    content = <p></p>;\r\n  }\r\n  \r\n  const saving = parseInt((product.save / 100) * product.price);\r\n  const finalPrice = qty * parseInt(product.price - (saving));\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n\r\n      <div className='container mt-5'>\r\n        <div className=\"row m-4\">\r\n          <div className=\"col-sm-4 justify-center\">\r\n            <figure className=\"figure border border-opacity-100\">\r\n              <img src={product.img} className=\"figure-img img-fluid rounded\" alt=\"...\" style={{ maxHeight: \"380px\", objectFit: \"fill\" }} />\r\n            </figure>\r\n          </div>\r\n          <div className=\"col-sm-8 text-secondary\">\r\n            <h2>{product.name}</h2>\r\n            <p className='ms-2'><small>By</small> {product.dealer}<small> | Product Code: {product.id}</small></p>\r\n            <hr />\r\n            <small>Material used: {product.material} & {product.metal}</small>\r\n            <h4 className='mt-4'>M.R.P : <small><s>₹ {product.price * qty}</s></small> <b className='ms-3 fs-2'>₹{finalPrice}</b>\r\n              <select className=\"ms-4 h-100 w-30 bg-outline-secondary text-secondary rounded\" style={{ select: \"#FF0000\" }} onChange={handleQty}>\r\n                {Array.from(Array(5), (e, i) => {\r\n                  return (\r\n                    <option key={i + 1} value={i + 1}>{i + 1}</option>)\r\n                })}\r\n              </select>\r\n            </h4>\r\n            <div className='m-3'>\r\n\r\n              <small>You Save <b className='text-warning'>₹ {saving * qty}</b></small>\r\n              <small className='border border-warning text-warning p-1 ms-2'>{product.save}% OFF</small>\r\n            </div>\r\n            {content}\r\n            <hr />\r\n            <div className='btn-group'>\r\n            <button className={`btn btn-outline-secondary m-1 rounded`} onClick={handleAddToCart}>Add to Cart</button>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n        </div>\r\n      </div>\r\n      <div className='mt-2 text-secondary container'>\r\n            <h4>Related Products</h4>\r\n            <hr id=\"hr-warning\" style={{ height: \"4px\", backgroundImage: \"-webkit-linear-gradient(center,rgb(0, 255, 137),rgb(0, 0, 0))\" }} />\r\n\r\n            <div className='container'> {/* boootstrap is mobile first */}\r\n              <div className='row mb-3'>\r\n                {/*foodItems.length !== []*/}\r\n                {foodItems.length > 1 ? foodItems.filter(\r\n                  (items) => (items.CategoryName === product.category) && (items._id !== product.id))\r\n                  .map(filterItems => {\r\n                    return (\r\n                      <div key={filterItems.id} className='col-12 col-md-6 col-lg-3'>\r\n                        <Card foodName={filterItems.name} item={filterItems} price={filterItems.price} ImgSrc={filterItems.img} CategoryName={filterItems.CategoryName} id={filterItems._id} save={filterItems.Save} dealer={filterItems.Dealer} metal={filterItems.Metal} material={filterItems.Material} pricebreakup={filterItems.pricebreakup}></Card>\r\n\r\n                      </div>\r\n                    )\r\n                  }) : <div> Waiting for data... </div>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n      <div>\r\n\r\n        <Footer />\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}\r\n/*\r\n{product.id}\r\n{product.name}\r\n{product.price}\r\n{product.metal}\r\n{Object.values(product.pricebreakup[0])[0]}\r\n*/","D:\\E-Commerce\\src\\screens\\ProductDetailsAdmin.js",[],[],"D:\\E-Commerce\\src\\screens\\AddItem.js",[],[],"D:\\E-Commerce\\src\\screens\\AddCategory.js",[],[],"D:\\E-Commerce\\src\\screens\\UpdateCategory.js",[],[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":14},{"ruleId":"180","severity":1,"message":"184","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":33,"column":8,"nodeType":"187","endLine":33,"endColumn":10,"suggestions":"188"},{"ruleId":"180","severity":1,"message":"189","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"190","line":40,"column":13,"nodeType":"182","messageId":"183","endLine":40,"endColumn":21},{"ruleId":"180","severity":1,"message":"191","line":7,"column":11,"nodeType":"182","messageId":"183","endLine":7,"endColumn":19},{"ruleId":"185","severity":1,"message":"192","line":33,"column":8,"nodeType":"187","endLine":33,"endColumn":10,"suggestions":"193"},{"ruleId":"180","severity":1,"message":"189","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"194","line":49,"column":9,"nodeType":"182","messageId":"183","endLine":49,"endColumn":17},{"ruleId":"180","severity":1,"message":"195","line":1,"column":35,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"196","line":11,"column":9,"nodeType":"182","messageId":"183","endLine":11,"endColumn":17},{"ruleId":"180","severity":1,"message":"195","line":1,"column":35,"nodeType":"182","messageId":"183","endLine":1,"endColumn":44},{"ruleId":"180","severity":1,"message":"197","line":6,"column":15,"nodeType":"182","messageId":"183","endLine":6,"endColumn":21},{"ruleId":"180","severity":1,"message":"198","line":7,"column":10,"nodeType":"182","messageId":"183","endLine":7,"endColumn":14},{"ruleId":"180","severity":1,"message":"199","line":7,"column":16,"nodeType":"182","messageId":"183","endLine":7,"endColumn":23},{"ruleId":"180","severity":1,"message":"196","line":8,"column":9,"nodeType":"182","messageId":"183","endLine":8,"endColumn":17},{"ruleId":"180","severity":1,"message":"200","line":1,"column":27,"nodeType":"182","messageId":"183","endLine":1,"endColumn":33},{"ruleId":"180","severity":1,"message":"201","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":14},{"ruleId":"180","severity":1,"message":"202","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":17},"no-new-object",["203"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFoodItems'. Either include it or remove the dependency array.","ArrayExpression",["204"],"'useState' is defined but never used.","'response' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchOrder'. Either include it or remove the dependency array.",["205"],"'loadCart' is assigned a value but never used.","'useEffect' is defined but never used.","'priceRef' is assigned a value but never used.","'setQty' is assigned a value but never used.","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'useRef' is defined but never used.","'Link' is defined but never used.","'foodCat' is assigned a value but never used.","no-object-constructor",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [loadFoodItems]",{"range":"210","text":"211"},"Update the dependencies array to be: [fetchOrder]",{"range":"212","text":"213"},[1181,1183],"[loadFoodItems]",[1022,1024],"[fetchOrder]"]
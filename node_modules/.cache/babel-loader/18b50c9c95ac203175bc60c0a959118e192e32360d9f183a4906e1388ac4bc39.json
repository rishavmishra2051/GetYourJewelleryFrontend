{"ast":null,"code":"var _jsxFileName = \"D:\\\\E-Commerce\\\\src\\\\screens\\\\ViewOrders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ViewOrders() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [orders, setorders] = useState([]);\n  const [orderData, setorderData] = useState({});\n  const [search, setSearch] = useState('');\n  const navigate = useNavigate();\n  const loadOrders = async () => {\n    let response = await fetch(\"http://localhost:5000/api/auth/foodData\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: localStorage.getItem('userEmail')\n      })\n    }).then(async res => {\n      let response = await res.json();\n      await setUsers(response[2]);\n    });\n  };\n  /*const loadOrders = async () => {\r\n      let response = await fetch(\"http://localhost:5000/api/auth/mygyjOrderData\", {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              email: localStorage.getItem('userEmail')\r\n          })\r\n      }).then(async (res) => {\r\n          let response = await res.json()\r\n          await setorders(response)\r\n        })\r\n  }\r\n  const fetchMyOrder = async (mail) => {\r\n      await fetch(\"http://localhost:5000/api/auth/mygyjOrderData\", {\r\n          method: 'POST',\r\n          headers: {\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              email: localStorage.getItem(mail)\r\n          })\r\n      }).then(async (res) => {\r\n          let response = await res.json()\r\n          await setorderData(response)\r\n      })\r\n  }*/\n  useEffect(() => {\n    loadOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        class: \"navbar navbar-light bg-light\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            className: \"navbar-brand fs-1 fst-italic\",\n            to: \"/admin\",\n            children: \"GetYourFood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            class: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-control me-2 border-secondary\",\n              type: \"search\",\n              placeholder: \"Search Order\",\n              \"aria-label\": \"Search\",\n              value: search,\n              onChange: e => {\n                setSearch(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-outline-secondary\",\n              onClick: () => {\n                setSearch('');\n              },\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n/*\r\n<div>\r\n                {\r\n                    users.length > 1 ? users.map((user) => {\r\n                            fetchMyOrder(user.email);\r\n                            {console.log(user.email)}\r\n                            return (\r\n                                <div className='container'>\r\n                                    <div className='row'>\r\n\r\n                                        {orderData !== {} ? Array(orderData).map(data => {\r\n                                            return (\r\n                                                data.orderData ?\r\n                                                    data.orderData.order_data.slice(0).reverse().map((item) => {\r\n                                                        return (\r\n                                                            item.map((arrayData) => {\r\n                                                                return (\r\n                                                                    <div  >\r\n                                                                        {arrayData.Order_date ? <div className='m-auto mt-5'>\r\n\r\n                                                                            {data = arrayData.Order_date}\r\n                                                                            <hr />\r\n                                                                        </div> :\r\n\r\n\r\n                                                                            <div className='col-12 col-md-6 col-lg-3' >\r\n                                                                                <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n                                                                                    <img src={arrayData.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n                                                                                    <div className=\"card-body\">\r\n                                                                                        <h5 className=\"card-title\">{arrayData.name}</h5>\r\n                                                                                        <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n                                                                                            <span className='m-1 d-inline  h-100 w-20 fs-6'>Qty - {arrayData.qty}</span>\r\n                                                                                            <div className=' d-inline ms-5 h-100 w-20 fs-5' >\r\n                                                                                                â‚¹{arrayData.price}/-\r\n                                                                                            </div>\r\n                                                                                            <br /><span className='m-1'>{data}</span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n\r\n\r\n\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })\r\n\r\n                                                        )\r\n                                                    }) : \"\"\r\n                                            )\r\n                                        }) : \"You have no order\"}\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            )\r\n                        })\r\n                        : \"No User Found\"\r\n                }\r\n            </div>\r\n*/\n_s(ViewOrders, \"tMTr1b5fGV3EuFShnJqKiObDWpw=\", false, function () {\n  return [useNavigate];\n});\n_c = ViewOrders;\nvar _c;\n$RefreshReg$(_c, \"ViewOrders\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewOrders","_s","users","setUsers","orders","setorders","orderData","setorderData","search","setSearch","navigate","loadOrders","response","fetch","method","headers","body","JSON","stringify","email","localStorage","getItem","then","res","json","children","class","className","to","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/E-Commerce/src/screens/ViewOrders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nexport default function ViewOrders() {\r\n    const [users, setUsers] = useState([])\r\n    const [orders, setorders] = useState([])\r\n    const [orderData, setorderData] = useState({})\r\n    const [search, setSearch] = useState('')\r\n    const navigate = useNavigate()\r\n    const loadOrders = async () => {\r\n        let response = await fetch(\"http://localhost:5000/api/auth/foodData\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: localStorage.getItem('userEmail')\r\n            })\r\n        }).then(async (res) => {\r\n            let response = await res.json()\r\n            await setUsers(response[2]);\r\n\r\n        })\r\n    }\r\n    /*const loadOrders = async () => {\r\n        let response = await fetch(\"http://localhost:5000/api/auth/mygyjOrderData\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: localStorage.getItem('userEmail')\r\n            })\r\n        }).then(async (res) => {\r\n            let response = await res.json()\r\n            await setorders(response)\r\n\r\n        })\r\n    }\r\n    const fetchMyOrder = async (mail) => {\r\n        await fetch(\"http://localhost:5000/api/auth/mygyjOrderData\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: localStorage.getItem(mail)\r\n            })\r\n        }).then(async (res) => {\r\n            let response = await res.json()\r\n            await setorderData(response)\r\n        })\r\n    }*/\r\n    useEffect(() => {\r\n        loadOrders()\r\n            \r\n    }, [])\r\n    return (\r\n        <>\r\n            <div>\r\n                <nav class=\"navbar navbar-light bg-light\">\r\n                    <div class=\"container\">\r\n                        <Link className=\"navbar-brand fs-1 fst-italic\" to=\"/admin\">GetYourFood</Link>\r\n                        <form class=\"d-flex\">\r\n                            <input class=\"form-control me-2 border-secondary\" type=\"search\" placeholder=\"Search Order\" aria-label=\"Search\" value={search} onChange={(e) => { setSearch(e.target.value) }} />\r\n                            <button class=\"btn btn-outline-secondary\" onClick={() => { setSearch('') }}>Search</button>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n            \r\n        </>\r\n    )\r\n}\r\n/*\r\n<div>\r\n                {\r\n                    users.length > 1 ? users.map((user) => {\r\n                            fetchMyOrder(user.email);\r\n                            {console.log(user.email)}\r\n                            return (\r\n                                <div className='container'>\r\n                                    <div className='row'>\r\n\r\n                                        {orderData !== {} ? Array(orderData).map(data => {\r\n                                            return (\r\n                                                data.orderData ?\r\n                                                    data.orderData.order_data.slice(0).reverse().map((item) => {\r\n                                                        return (\r\n                                                            item.map((arrayData) => {\r\n                                                                return (\r\n                                                                    <div  >\r\n                                                                        {arrayData.Order_date ? <div className='m-auto mt-5'>\r\n\r\n                                                                            {data = arrayData.Order_date}\r\n                                                                            <hr />\r\n                                                                        </div> :\r\n\r\n\r\n                                                                            <div className='col-12 col-md-6 col-lg-3' >\r\n                                                                                <div className=\"card mt-3\" style={{ width: \"16rem\", maxHeight: \"360px\" }}>\r\n                                                                                    <img src={arrayData.img} className=\"card-img-top\" alt=\"...\" style={{ height: \"120px\", objectFit: \"fill\" }} />\r\n                                                                                    <div className=\"card-body\">\r\n                                                                                        <h5 className=\"card-title\">{arrayData.name}</h5>\r\n                                                                                        <div className='container w-100 p-0' style={{ height: \"38px\" }}>\r\n                                                                                            <span className='m-1 d-inline  h-100 w-20 fs-6'>Qty - {arrayData.qty}</span>\r\n                                                                                            <div className=' d-inline ms-5 h-100 w-20 fs-5' >\r\n                                                                                                â‚¹{arrayData.price}/-\r\n                                                                                            </div>\r\n                                                                                            <br /><span className='m-1'>{data}</span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n\r\n                                                                            </div>\r\n\r\n\r\n\r\n                                                                        }\r\n\r\n                                                                    </div>\r\n                                                                )\r\n                                                            })\r\n\r\n                                                        )\r\n                                                    }) : \"\"\r\n                                            )\r\n                                        }) : \"You have no order\"}\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            )\r\n                        })\r\n                        : \"No User Found\"\r\n                }\r\n            </div>\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
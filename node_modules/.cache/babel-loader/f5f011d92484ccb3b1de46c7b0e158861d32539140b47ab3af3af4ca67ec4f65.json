{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport { ListActionTypes, useList } from '../useList';\nimport { defaultOptionStringifier } from './defaultOptionStringifier';\nimport { useCompoundParent } from '../useCompound';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { selectReducer } from './selectReducer';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\n// visually hidden style based on https://webaim.org/techniques/css/invisiblecontent/\nvar visuallyHiddenStyle = {\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  clipPath: 'inset(50%)',\n  height: '1px',\n  width: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  left: '50%',\n  bottom: 0 // to display the native browser validation error at the bottom of the Select.\n};\n\nfunction defaultFormValueProvider(selectedOption) {\n  if (Array.isArray(selectedOption)) {\n    if (selectedOption.length === 0) {\n      return '';\n    }\n    return JSON.stringify(selectedOption.map(function (o) {\n      return o.value;\n    }));\n  }\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n  return JSON.stringify(selectedOption.value);\n}\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base-ui/react-select/hooks-api/#use-select)\n */\nfunction useSelect(props) {\n  var areOptionsEqual = props.areOptionsEqual,\n    buttonRefProp = props.buttonRef,\n    _props$defaultOpen = props.defaultOpen,\n    defaultOpen = _props$defaultOpen === void 0 ? false : _props$defaultOpen,\n    defaultValueProp = props.defaultValue,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    listboxIdProp = props.listboxId,\n    listboxRefProp = props.listboxRef,\n    _props$multiple = props.multiple,\n    multiple = _props$multiple === void 0 ? false : _props$multiple,\n    name = props.name,\n    required = props.required,\n    onChange = props.onChange,\n    onHighlightChange = props.onHighlightChange,\n    onOpenChange = props.onOpenChange,\n    openProp = props.open,\n    optionsParam = props.options,\n    _props$getOptionAsStr = props.getOptionAsString,\n    getOptionAsString = _props$getOptionAsStr === void 0 ? defaultOptionStringifier : _props$getOptionAsStr,\n    _props$getSerializedV = props.getSerializedValue,\n    getSerializedValue = _props$getSerializedV === void 0 ? defaultFormValueProvider : _props$getSerializedV,\n    valueProp = props.value,\n    _props$componentName = props.componentName,\n    componentName = _props$componentName === void 0 ? 'useSelect' : _props$componentName;\n  var buttonRef = React.useRef(null);\n  var handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  var listboxRef = React.useRef(null);\n  var listboxId = useId(listboxIdProp);\n  var defaultValue;\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    if (multiple) {\n      defaultValue = defaultValueProp;\n    } else {\n      defaultValue = defaultValueProp == null ? [] : [defaultValueProp];\n    }\n  }\n  var value = React.useMemo(function () {\n    if (valueProp !== undefined) {\n      if (multiple) {\n        return valueProp;\n      }\n      return valueProp == null ? [] : [valueProp];\n    }\n    return undefined;\n  }, [valueProp, multiple]);\n  var _useCompoundParent = useCompoundParent(),\n    subitems = _useCompoundParent.subitems,\n    compoundComponentContextValue = _useCompoundParent.contextValue;\n  var options = React.useMemo(function () {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map(function (option, index) {\n        return [option.value, {\n          value: option.value,\n          label: option.label,\n          disabled: option.disabled,\n          ref: /*#__PURE__*/React.createRef(),\n          id: \"\".concat(listboxId, \"_\").concat(index)\n        }];\n      }));\n    }\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n  var handleListboxRef = useForkRef(listboxRefProp, listboxRef);\n  var _useButton = useButton({\n      disabled: disabled,\n      rootRef: handleButtonRef\n    }),\n    getButtonRootProps = _useButton.getRootProps,\n    buttonActive = _useButton.active,\n    buttonFocusVisible = _useButton.focusVisible,\n    mergedButtonRef = _useButton.rootRef;\n  var optionValues = React.useMemo(function () {\n    return Array.from(options.keys());\n  }, [options]);\n  var getOptionByValue = React.useCallback(function (valueToGet) {\n    // This can't be simply `options.get(valueToGet)` because of the `areOptionsEqual` prop.\n    // If it's provided, we assume that the user wants to compare the options by value.\n    if (areOptionsEqual !== undefined) {\n      var similarValue = optionValues.find(function (optionValue) {\n        return areOptionsEqual(optionValue, valueToGet);\n      });\n      return options.get(similarValue);\n    }\n    return options.get(valueToGet);\n  }, [options, areOptionsEqual, optionValues]);\n  var isItemDisabled = React.useCallback(function (valueToCheck) {\n    var _option$disabled;\n    var option = getOptionByValue(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [getOptionByValue]);\n  var stringifyOption = React.useCallback(function (valueToCheck) {\n    var option = getOptionByValue(valueToCheck);\n    if (!option) {\n      return '';\n    }\n    return getOptionAsString(option);\n  }, [getOptionByValue, getOptionAsString]);\n  var controlledState = React.useMemo(function () {\n    return {\n      selectedValues: value,\n      open: openProp\n    };\n  }, [value, openProp]);\n  var getItemId = React.useCallback(function (itemValue) {\n    var _options$get;\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  var handleSelectionChange = React.useCallback(function (event, newValues) {\n    if (multiple) {\n      onChange == null || onChange(event, newValues);\n    } else {\n      var _newValues$;\n      onChange == null || onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  var handleHighlightChange = React.useCallback(function (event, newValue) {\n    onHighlightChange == null || onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  var handleStateChange = React.useCallback(function (event, field, fieldValue) {\n    if (field === 'open') {\n      onOpenChange == null || onOpenChange(fieldValue);\n      if (fieldValue === false && (event == null ? void 0 : event.type) !== 'blur') {\n        var _buttonRef$current;\n        (_buttonRef$current = buttonRef.current) == null || _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  var useListParameters = {\n    getInitialState: function getInitialState() {\n      var _defaultValue;\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId: getItemId,\n    controlledProps: controlledState,\n    itemComparer: areOptionsEqual,\n    isItemDisabled: isItemDisabled,\n    rootRef: mergedButtonRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(function () {\n      return {\n        multiple: multiple\n      };\n    }, [multiple]),\n    items: optionValues,\n    getItemAsString: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer,\n    componentName: componentName\n  };\n  var _useList = useList(useListParameters),\n    dispatch = _useList.dispatch,\n    getListboxRootProps = _useList.getRootProps,\n    listContextValue = _useList.contextValue,\n    _useList$state = _useList.state,\n    open = _useList$state.open,\n    highlightedOption = _useList$state.highlightedValue,\n    selectedOptions = _useList$state.selectedValues,\n    mergedListRootRef = _useList.rootRef;\n  var createHandleButtonMouseDown = function createHandleButtonMouseDown(externalEventHandlers) {\n    return function (event) {\n      var _externalEventHandler;\n      externalEventHandlers == null || (_externalEventHandler = externalEventHandlers.onMouseDown) == null || _externalEventHandler.call(externalEventHandlers, event);\n      if (!event.defaultMuiPrevented) {\n        var action = {\n          type: SelectActionTypes.buttonClick,\n          event: event\n        };\n        dispatch(action);\n      }\n    };\n  };\n  useEnhancedEffect(function () {\n    // Scroll to the currently highlighted option.\n    if (highlightedOption != null) {\n      var _getOptionByValue;\n      var optionRef = (_getOptionByValue = getOptionByValue(highlightedOption)) == null ? void 0 : _getOptionByValue.ref;\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n      var listboxClientRect = listboxRef.current.getBoundingClientRect();\n      var optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlightedOption, getOptionByValue]);\n  var getOptionMetadata = React.useCallback(function (optionValue) {\n    return getOptionByValue(optionValue);\n  }, [getOptionByValue]);\n  var getSelectTriggerProps = function getSelectTriggerProps() {\n    var otherHandlers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, otherHandlers, {\n      onMouseDown: createHandleButtonMouseDown(otherHandlers),\n      ref: mergedListRootRef,\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-controls': listboxId\n    });\n  };\n  var getButtonProps = function getButtonProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    var listboxAndButtonProps = combineHooksSlotProps(getButtonRootProps, getListboxRootProps);\n    var combinedProps = combineHooksSlotProps(listboxAndButtonProps, getSelectTriggerProps);\n    return _extends({}, externalProps, combinedProps(externalEventHandlers));\n  };\n  var getListboxProps = function getListboxProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return _extends({}, externalProps, {\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined,\n      ref: handleListboxRef,\n      onMouseDown: preventDefault // to prevent the button from losing focus when interacting with the listbox\n    });\n  };\n\n  React.useDebugValue({\n    selectedOptions: selectedOptions,\n    highlightedOption: highlightedOption,\n    open: open\n  });\n  var contextValue = React.useMemo(function () {\n    return _extends({}, listContextValue, compoundComponentContextValue);\n  }, [listContextValue, compoundComponentContextValue]);\n  var selectValue;\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n  var selectedOptionsMetadata;\n  if (multiple) {\n    selectedOptionsMetadata = selectValue.map(function (v) {\n      return getOptionMetadata(v);\n    }).filter(function (o) {\n      return o !== undefined;\n    });\n  } else {\n    var _getOptionMetadata;\n    selectedOptionsMetadata = (_getOptionMetadata = getOptionMetadata(selectValue)) != null ? _getOptionMetadata : null;\n  }\n  var createHandleHiddenInputChange = function createHandleHiddenInputChange(externalEventHandlers) {\n    return function (event) {\n      var _externalEventHandler2;\n      externalEventHandlers == null || (_externalEventHandler2 = externalEventHandlers.onChange) == null || _externalEventHandler2.call(externalEventHandlers, event);\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n      var option = options.get(event.target.value);\n\n      // support autofill\n      if (event.target.value === '') {\n        dispatch({\n          type: ListActionTypes.clearSelection\n        });\n      } else if (option !== undefined) {\n        dispatch({\n          type: SelectActionTypes.browserAutoFill,\n          item: option.value,\n          event: event\n        });\n      }\n    };\n  };\n  var getHiddenInputProps = function getHiddenInputProps() {\n    var externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({\n      name: name,\n      tabIndex: -1,\n      'aria-hidden': true,\n      required: required ? true : undefined,\n      value: getSerializedValue(selectedOptionsMetadata),\n      style: visuallyHiddenStyle\n    }, externalProps, {\n      onChange: createHandleHiddenInputChange(externalEventHandlers)\n    });\n  };\n  return {\n    buttonActive: buttonActive,\n    buttonFocusVisible: buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue: contextValue,\n    disabled: disabled,\n    dispatch: dispatch,\n    getButtonProps: getButtonProps,\n    getHiddenInputProps: getHiddenInputProps,\n    getListboxProps: getListboxProps,\n    getOptionMetadata: getOptionMetadata,\n    listboxRef: mergedListRootRef,\n    open: open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption: highlightedOption\n  };\n}\nexport { useSelect };","map":{"version":3,"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","useButton","SelectActionTypes","ListActionTypes","useList","defaultOptionStringifier","useCompoundParent","extractEventHandlers","selectReducer","combineHooksSlotProps","visuallyHiddenStyle","clip","clipPath","height","width","margin","overflow","padding","position","left","bottom","defaultFormValueProvider","selectedOption","Array","isArray","length","JSON","stringify","map","o","value","preventDefault","event","useSelect","props","areOptionsEqual","buttonRefProp","buttonRef","_props$defaultOpen","defaultOpen","defaultValueProp","defaultValue","_props$disabled","disabled","listboxIdProp","listboxId","listboxRefProp","listboxRef","_props$multiple","multiple","name","required","onChange","onHighlightChange","onOpenChange","openProp","open","optionsParam","options","_props$getOptionAsStr","getOptionAsString","_props$getSerializedV","getSerializedValue","valueProp","_props$componentName","componentName","useRef","handleButtonRef","undefined","useMemo","_useCompoundParent","subitems","compoundComponentContextValue","contextValue","Map","option","index","label","ref","createRef","id","concat","handleListboxRef","_useButton","rootRef","getButtonRootProps","getRootProps","buttonActive","active","buttonFocusVisible","focusVisible","mergedButtonRef","optionValues","from","keys","getOptionByValue","useCallback","valueToGet","similarValue","find","optionValue","get","isItemDisabled","valueToCheck","_option$disabled","stringifyOption","controlledState","selectedValues","getItemId","itemValue","_options$get","handleSelectionChange","newValues","_newValues$","handleHighlightChange","newValue","handleStateChange","field","fieldValue","type","_buttonRef$current","current","focus","useListParameters","getInitialState","_defaultValue","highlightedValue","controlledProps","itemComparer","onStateChange","reducerActionContext","items","getItemAsString","selectionMode","stateReducer","_useList","dispatch","getListboxRootProps","listContextValue","_useList$state","state","highlightedOption","selectedOptions","mergedListRootRef","createHandleButtonMouseDown","externalEventHandlers","_externalEventHandler","onMouseDown","call","defaultMuiPrevented","action","buttonClick","_getOptionByValue","optionRef","listboxClientRect","getBoundingClientRect","optionClientRect","top","scrollTop","getOptionMetadata","getSelectTriggerProps","otherHandlers","arguments","role","getButtonProps","externalProps","listboxAndButtonProps","combinedProps","getListboxProps","useDebugValue","selectValue","selectedOptionsMetadata","v","filter","_getOptionMetadata","createHandleHiddenInputChange","_externalEventHandler2","target","clearSelection","browserAutoFill","item","getHiddenInputProps","tabIndex","style"],"sources":["D:/E-Commerce/node_modules/@mui/base/useSelect/useSelect.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useButton } from '../useButton';\nimport { SelectActionTypes } from './useSelect.types';\nimport { ListActionTypes, useList } from '../useList';\nimport { defaultOptionStringifier } from './defaultOptionStringifier';\nimport { useCompoundParent } from '../useCompound';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { selectReducer } from './selectReducer';\nimport { combineHooksSlotProps } from '../utils/combineHooksSlotProps';\n// visually hidden style based on https://webaim.org/techniques/css/invisiblecontent/\nconst visuallyHiddenStyle = {\n  clip: 'rect(1px, 1px, 1px, 1px)',\n  clipPath: 'inset(50%)',\n  height: '1px',\n  width: '1px',\n  margin: '-1px',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  left: '50%',\n  bottom: 0 // to display the native browser validation error at the bottom of the Select.\n};\nfunction defaultFormValueProvider(selectedOption) {\n  if (Array.isArray(selectedOption)) {\n    if (selectedOption.length === 0) {\n      return '';\n    }\n    return JSON.stringify(selectedOption.map(o => o.value));\n  }\n  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {\n    return '';\n  }\n  if (typeof selectedOption.value === 'string' || typeof selectedOption.value === 'number') {\n    return selectedOption.value;\n  }\n  return JSON.stringify(selectedOption.value);\n}\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\n/**\n *\n * Demos:\n *\n * - [Select](https://mui.com/base-ui/react-select/#hooks)\n *\n * API:\n *\n * - [useSelect API](https://mui.com/base-ui/react-select/hooks-api/#use-select)\n */\nfunction useSelect(props) {\n  const {\n    areOptionsEqual,\n    buttonRef: buttonRefProp,\n    defaultOpen = false,\n    defaultValue: defaultValueProp,\n    disabled = false,\n    listboxId: listboxIdProp,\n    listboxRef: listboxRefProp,\n    multiple = false,\n    name,\n    required,\n    onChange,\n    onHighlightChange,\n    onOpenChange,\n    open: openProp,\n    options: optionsParam,\n    getOptionAsString = defaultOptionStringifier,\n    getSerializedValue = defaultFormValueProvider,\n    value: valueProp,\n    componentName = 'useSelect'\n  } = props;\n  const buttonRef = React.useRef(null);\n  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);\n  const listboxRef = React.useRef(null);\n  const listboxId = useId(listboxIdProp);\n  let defaultValue;\n  if (valueProp === undefined && defaultValueProp === undefined) {\n    defaultValue = [];\n  } else if (defaultValueProp !== undefined) {\n    if (multiple) {\n      defaultValue = defaultValueProp;\n    } else {\n      defaultValue = defaultValueProp == null ? [] : [defaultValueProp];\n    }\n  }\n  const value = React.useMemo(() => {\n    if (valueProp !== undefined) {\n      if (multiple) {\n        return valueProp;\n      }\n      return valueProp == null ? [] : [valueProp];\n    }\n    return undefined;\n  }, [valueProp, multiple]);\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const options = React.useMemo(() => {\n    if (optionsParam != null) {\n      return new Map(optionsParam.map((option, index) => [option.value, {\n        value: option.value,\n        label: option.label,\n        disabled: option.disabled,\n        ref: /*#__PURE__*/React.createRef(),\n        id: `${listboxId}_${index}`\n      }]));\n    }\n    return subitems;\n  }, [optionsParam, subitems, listboxId]);\n  const handleListboxRef = useForkRef(listboxRefProp, listboxRef);\n  const {\n    getRootProps: getButtonRootProps,\n    active: buttonActive,\n    focusVisible: buttonFocusVisible,\n    rootRef: mergedButtonRef\n  } = useButton({\n    disabled,\n    rootRef: handleButtonRef\n  });\n  const optionValues = React.useMemo(() => Array.from(options.keys()), [options]);\n  const getOptionByValue = React.useCallback(valueToGet => {\n    // This can't be simply `options.get(valueToGet)` because of the `areOptionsEqual` prop.\n    // If it's provided, we assume that the user wants to compare the options by value.\n    if (areOptionsEqual !== undefined) {\n      const similarValue = optionValues.find(optionValue => areOptionsEqual(optionValue, valueToGet));\n      return options.get(similarValue);\n    }\n    return options.get(valueToGet);\n  }, [options, areOptionsEqual, optionValues]);\n  const isItemDisabled = React.useCallback(valueToCheck => {\n    var _option$disabled;\n    const option = getOptionByValue(valueToCheck);\n    return (_option$disabled = option == null ? void 0 : option.disabled) != null ? _option$disabled : false;\n  }, [getOptionByValue]);\n  const stringifyOption = React.useCallback(valueToCheck => {\n    const option = getOptionByValue(valueToCheck);\n    if (!option) {\n      return '';\n    }\n    return getOptionAsString(option);\n  }, [getOptionByValue, getOptionAsString]);\n  const controlledState = React.useMemo(() => ({\n    selectedValues: value,\n    open: openProp\n  }), [value, openProp]);\n  const getItemId = React.useCallback(itemValue => {\n    var _options$get;\n    return (_options$get = options.get(itemValue)) == null ? void 0 : _options$get.id;\n  }, [options]);\n  const handleSelectionChange = React.useCallback((event, newValues) => {\n    if (multiple) {\n      onChange == null || onChange(event, newValues);\n    } else {\n      var _newValues$;\n      onChange == null || onChange(event, (_newValues$ = newValues[0]) != null ? _newValues$ : null);\n    }\n  }, [multiple, onChange]);\n  const handleHighlightChange = React.useCallback((event, newValue) => {\n    onHighlightChange == null || onHighlightChange(event, newValue != null ? newValue : null);\n  }, [onHighlightChange]);\n  const handleStateChange = React.useCallback((event, field, fieldValue) => {\n    if (field === 'open') {\n      onOpenChange == null || onOpenChange(fieldValue);\n      if (fieldValue === false && (event == null ? void 0 : event.type) !== 'blur') {\n        var _buttonRef$current;\n        (_buttonRef$current = buttonRef.current) == null || _buttonRef$current.focus();\n      }\n    }\n  }, [onOpenChange]);\n  const useListParameters = {\n    getInitialState: () => {\n      var _defaultValue;\n      return {\n        highlightedValue: null,\n        selectedValues: (_defaultValue = defaultValue) != null ? _defaultValue : [],\n        open: defaultOpen\n      };\n    },\n    getItemId,\n    controlledProps: controlledState,\n    itemComparer: areOptionsEqual,\n    isItemDisabled,\n    rootRef: mergedButtonRef,\n    onChange: handleSelectionChange,\n    onHighlightChange: handleHighlightChange,\n    onStateChange: handleStateChange,\n    reducerActionContext: React.useMemo(() => ({\n      multiple\n    }), [multiple]),\n    items: optionValues,\n    getItemAsString: stringifyOption,\n    selectionMode: multiple ? 'multiple' : 'single',\n    stateReducer: selectReducer,\n    componentName\n  };\n  const {\n    dispatch,\n    getRootProps: getListboxRootProps,\n    contextValue: listContextValue,\n    state: {\n      open,\n      highlightedValue: highlightedOption,\n      selectedValues: selectedOptions\n    },\n    rootRef: mergedListRootRef\n  } = useList(useListParameters);\n  const createHandleButtonMouseDown = externalEventHandlers => event => {\n    var _externalEventHandler;\n    externalEventHandlers == null || (_externalEventHandler = externalEventHandlers.onMouseDown) == null || _externalEventHandler.call(externalEventHandlers, event);\n    if (!event.defaultMuiPrevented) {\n      const action = {\n        type: SelectActionTypes.buttonClick,\n        event\n      };\n      dispatch(action);\n    }\n  };\n  useEnhancedEffect(() => {\n    // Scroll to the currently highlighted option.\n    if (highlightedOption != null) {\n      var _getOptionByValue;\n      const optionRef = (_getOptionByValue = getOptionByValue(highlightedOption)) == null ? void 0 : _getOptionByValue.ref;\n      if (!listboxRef.current || !(optionRef != null && optionRef.current)) {\n        return;\n      }\n      const listboxClientRect = listboxRef.current.getBoundingClientRect();\n      const optionClientRect = optionRef.current.getBoundingClientRect();\n      if (optionClientRect.top < listboxClientRect.top) {\n        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;\n      } else if (optionClientRect.bottom > listboxClientRect.bottom) {\n        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;\n      }\n    }\n  }, [highlightedOption, getOptionByValue]);\n  const getOptionMetadata = React.useCallback(optionValue => getOptionByValue(optionValue), [getOptionByValue]);\n  const getSelectTriggerProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      onMouseDown: createHandleButtonMouseDown(otherHandlers),\n      ref: mergedListRootRef,\n      role: 'combobox',\n      'aria-expanded': open,\n      'aria-controls': listboxId\n    });\n  };\n  const getButtonProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    const listboxAndButtonProps = combineHooksSlotProps(getButtonRootProps, getListboxRootProps);\n    const combinedProps = combineHooksSlotProps(listboxAndButtonProps, getSelectTriggerProps);\n    return _extends({}, externalProps, combinedProps(externalEventHandlers));\n  };\n  const getListboxProps = (externalProps = {}) => {\n    return _extends({}, externalProps, {\n      id: listboxId,\n      role: 'listbox',\n      'aria-multiselectable': multiple ? 'true' : undefined,\n      ref: handleListboxRef,\n      onMouseDown: preventDefault // to prevent the button from losing focus when interacting with the listbox\n    });\n  };\n  React.useDebugValue({\n    selectedOptions,\n    highlightedOption,\n    open\n  });\n  const contextValue = React.useMemo(() => _extends({}, listContextValue, compoundComponentContextValue), [listContextValue, compoundComponentContextValue]);\n  let selectValue;\n  if (props.multiple) {\n    selectValue = selectedOptions;\n  } else {\n    selectValue = selectedOptions.length > 0 ? selectedOptions[0] : null;\n  }\n  let selectedOptionsMetadata;\n  if (multiple) {\n    selectedOptionsMetadata = selectValue.map(v => getOptionMetadata(v)).filter(o => o !== undefined);\n  } else {\n    var _getOptionMetadata;\n    selectedOptionsMetadata = (_getOptionMetadata = getOptionMetadata(selectValue)) != null ? _getOptionMetadata : null;\n  }\n  const createHandleHiddenInputChange = externalEventHandlers => event => {\n    var _externalEventHandler2;\n    externalEventHandlers == null || (_externalEventHandler2 = externalEventHandlers.onChange) == null || _externalEventHandler2.call(externalEventHandlers, event);\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    const option = options.get(event.target.value);\n\n    // support autofill\n    if (event.target.value === '') {\n      dispatch({\n        type: ListActionTypes.clearSelection\n      });\n    } else if (option !== undefined) {\n      dispatch({\n        type: SelectActionTypes.browserAutoFill,\n        item: option.value,\n        event\n      });\n    }\n  };\n  const getHiddenInputProps = (externalProps = {}) => {\n    const externalEventHandlers = extractEventHandlers(externalProps);\n    return _extends({\n      name,\n      tabIndex: -1,\n      'aria-hidden': true,\n      required: required ? true : undefined,\n      value: getSerializedValue(selectedOptionsMetadata),\n      style: visuallyHiddenStyle\n    }, externalProps, {\n      onChange: createHandleHiddenInputChange(externalEventHandlers)\n    });\n  };\n  return {\n    buttonActive,\n    buttonFocusVisible,\n    buttonRef: mergedButtonRef,\n    contextValue,\n    disabled,\n    dispatch,\n    getButtonProps,\n    getHiddenInputProps,\n    getListboxProps,\n    getOptionMetadata,\n    listboxRef: mergedListRootRef,\n    open,\n    options: optionValues,\n    value: selectValue,\n    highlightedOption\n  };\n}\nexport { useSelect };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}